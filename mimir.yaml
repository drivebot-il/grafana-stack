target: all

# Configure Mimir to use Minio as object storage backend.
common:
  storage:
    backend: s3
    s3:
      endpoint: minio:9000
      access_key_id: ${MINIO_ROOT_USER}
      secret_access_key: ${MINIO_ROOT_PASSWORD}
      insecure: true
      bucket_name: mimir

# Blocks storage requires a prefix when using a common object storage bucket.
blocks_storage:
  storage_prefix: blocks
  tsdb:
    dir: /data/ingester
    # block_ranges_period: 5m
    # block_ranges_period:
    #   - 5m

server:
  http_listen_port: 9009

compactor:
  data_dir: /tmp/mimir/compactor
  sharding_ring:
    kvstore:
      store: memberlist

distributor:
  ring:
    instance_addr: 127.0.0.1
    kvstore:
      store: memberlist

ingester:
  ring:
    instance_addr: 127.0.0.1
    kvstore:
      store: memberlist
    replication_factor: 1

ruler:
  # storage:
  #   type: local
  #   local:
  #     directory: /rules      # This is where rule YAML files will be mounted
  enable_api: true           # Enables rules/alerts API (for UI/ruler API use)
  ring:
    kvstore:
      store: memberlist
    # Quickly detect unhealthy rulers to speed up the tutorial.
    heartbeat_period: 2s
    heartbeat_timeout: 10s
  rule_path: /rules
  alertmanager_url: http://127.0.0.1:8080/alertmanager

store_gateway:
  sharding_ring:
    replication_factor: 1

limits:
  compactor_blocks_retention_period: 90d  # Example: keep metrics for 90 days

# Use memberlist, a gossip-based protocol, to enable the 3 Mimir replicas to communicate
# memberlist:
#   join_members: [mimir-1, mimir-2]


# blocks_storage:
#   backend: filesystem
#   filesystem:
#     dir: /mimir/tsdb

# compactor:
#   data_dir: /mimir/compactor

# # ingester:
# #   wal:
# #     dir: /mimir/wal

# # limits:
# #   max_label_names_per_series: 30
# #   max_label_value_length: 2048
# #   max_label_names_per_query: 100
# #   max_global_series_per_user: 1000000
