services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
  #   ports:
  #     - "9090:9090"

  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    depends_on:
      minio: 
        condition: service_healthy
    user: "0:0"
    command: 
       - -config.file=/etc/loki/local-config.yaml
       - -config.expand-env=true
    volumes:
      - ./loki-local-config.yaml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - "10.0.1.2:3100:3100"

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    restart: unless-stopped
    depends_on:
      minio: 
        condition: service_healthy
    # user: "0:0"
    command: ["-config.file=/etc/tempo/tempo-local.yaml", "-config.expand-env=true"]
    volumes:
      - ./tempo-local.yaml:/etc/tempo/tempo-local.yaml:ro
      - tempo-data:/var/tempo
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - "10.0.1.2:3200:3200"
      - "10.0.1.2:4317:4317"

  mimir:
    image: grafana/mimir:latest
    restart: unless-stopped
    container_name: mimir
    command: ["-config.file=/etc/mimir/mimir.yaml", "-config.expand-env=true", "-usage-stats.enabled=false"]
    volumes:
      - ./mimir.yaml:/etc/mimir/mimir.yaml:ro
      - mimir-data:/mimir
      - ./rules:/rules
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    depends_on:
      minio:
        condition: service_healthy
    ports:
      - "10.0.1.2:9009:9009"

  pyroscope:
    image: grafana/pyroscope:latest
    container_name: pyroscope
    ports:
      - "10.0.1.2:4040:4040"
    volumes:
      - pyroscope-data:/var/lib/pyroscope
      # - ./pyroscope.yaml:/etc/pyroscope/pyroscope.yaml:ro
      - ./pyroscope.yaml:/etc/pyroscope/server.yaml
    # command: ["server", "--config.file=/etc/pyroscope/pyroscope.yaml"]
    restart: unless-stopped


  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_INSTALL_PLUGINS=grafana-pyroscope-app
    volumes:
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml:ro
      - ./grafana/dashboards/:/var/lib/grafana/dashboards:ro
      - grafana-data:/var/lib/grafana
    ports:
      - "80:3000"
    depends_on:
      - prometheus
      - loki
      # - tempo
      - mimir
      - pyroscope

  minio:
    image: minio/minio
    restart: unless-stopped
    entrypoint: [""]
    command: ["sh", "-c", "mkdir -p /data/mimir && minio server --quiet --console-address \":9001\" /data"]
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_PROMETHEUS_AUTH_TYPE=public
    volumes:
      - minio-data:/data
    ports:
    #   - "9000:9000"
      - "10.0.1.2:9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  createbuckets:
    image: quay.io/minio/mc:RELEASE.2025-03-12T17-29-24Z
    depends_on:
      - minio
    restart: on-failure
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      mc mb myminio/mimir;
      mc mb myminio/tempo;
      mc mb -p myminio/loki;
      mc mb -p myminio/loki-chunks;
      mc mb -p myminio/loki-ruler;
      mc mb -p myminio/loki-admin;
      exit 0;
      "

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100

  # alloy:
  #   image: grafana/alloy:latest
  #   volumes:
  #     - ./config.alloy:/etc/alloy/config.alloy:ro


volumes:
  prometheus-data:
  loki-data:
  tempo-data:
  mimir-data:
  pyroscope-data:
  grafana-data:
  minio-data:
    driver: local
