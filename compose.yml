services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
  #   ports:
  #     - "9090:9090"

  loki:
    image: grafana/loki:latest
    container_name: loki
    user: "0:0"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-local-config.yaml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    # ports:
    #   - "3100:3100"

  # tempo:
  #   image: grafana/tempo:latest
  #   container_name: tempo
  #   user: "0:0"
  #   command: ["-config.file=/etc/tempo/tempo-local.yaml"]
  #   volumes:
  #     - ./tempo-local.yaml:/etc/tempo/tempo-local.yaml:ro
  #       - tempo-data:/tempo
  #     # - ./tempo.yaml:/etc/tempo.yaml
  #   ports:
  #     - "3200:3200"

  mimir:
    image: grafana/mimir:latest
    container_name: mimir
    command: ["-config.file=/etc/mimir/mimir.yaml", "-config.expand-env=true"]
    volumes:
      - ./mimir.yaml:/etc/mimir/mimir.yaml:ro
      - mimir-data:/mimir
    depends_on:
      minio:
        condition: service_healthy
    ports:
      - "10.0.1.2:9009:9009"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml:ro
      - ./grafana/dashboards/:/var/lib/grafana/dashboards:ro
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
      # - tempo
      - mimir

  minio:
    image: minio/minio
    entrypoint: [""]
    command: ["sh", "-c", "mkdir -p /data/mimir && minio server --quiet /data"]
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio-data:/data
    # ports:
    #   - "9000:9000"
    #   - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100


  alloy:
    image: grafana/alloy:latest
    volumes:
      - ./config.alloy:/etc/alloy/config.alloy:ro


volumes:
  prometheus-data:
  loki-data:
  tempo-data:
  mimir-data:
  grafana-data:
  minio-data:
    driver: local
